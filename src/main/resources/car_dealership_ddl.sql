DROP TABLE IF EXISTS SERVICE_MECHANIC CASCADE;
DROP TABLE IF EXISTS MECHANIC CASCADE;
DROP TABLE IF EXISTS SERVICE CASCADE;
DROP TABLE IF EXISTS SERVICE_PART CASCADE;
DROP TABLE IF EXISTS PART CASCADE;
DROP TABLE IF EXISTS CAR_SERVICE_REQUEST CASCADE;
DROP TABLE IF EXISTS CAR_TO_SERVICE CASCADE;
DROP TABLE IF EXISTS INVOICE CASCADE;
DROP TABLE IF EXISTS CAR_TO_BUY CASCADE;
DROP TABLE IF EXISTS CUSTOMER CASCADE;
DROP TABLE IF EXISTS SALESMAN CASCADE;
DROP TABLE IF EXISTS ADDRESS CASCADE;

CREATE TABLE ADDRESS (
    ADDRESS_ID      SERIAL      NOT NULL,
    COUNTRY         VARCHAR(32) NOT NULL,
    CITY            VARCHAR(32) NOT NULL,
    POSTAL_CODE     VARCHAR(32) NOT NULL,
    ADDRESS         VARCHAR(64) NOT NULL,
    PRIMARY KEY (ADDRESS_ID)
);

CREATE TABLE SALESMAN (
    SALESMAN_ID SERIAL      NOT NULL,
    NAME        VARCHAR(32) NOT NULL,
    SURNAME     VARCHAR(32) NOT NULL,
    PESEL       VARCHAR(32) NOT NULL,
    PRIMARY KEY (SALESMAN_ID),
    UNIQUE (PESEL)
);

CREATE TABLE CUSTOMER (
    CUSTOMER_ID     SERIAL      NOT NULL,
    NAME            VARCHAR(32) NOT NULL,
    SURNAME         VARCHAR(32) NOT NULL,
    PHONE           VARCHAR(32) NOT NULL,
    EMAIL           VARCHAR(32) NOT NULL,
    ADDRESS_ID      INT         NOT NULL,
    PRIMARY KEY (CUSTOMER_ID),
    UNIQUE (EMAIL),
    CONSTRAINT FK_CUSTOMER_ADDRESS
        FOREIGN KEY (ADDRESS_ID)
            REFERENCES ADDRESS (ADDRESS_ID)
);

CREATE TABLE CAR_TO_BUY (
    CAR_TO_BUY_ID   SERIAL          NOT NULL,
    VIN             VARCHAR(20)     NOT NULL,
    BRAND           VARCHAR(32)     NOT NULL,
    MODEL           VARCHAR(32)     NOT NULL,
    YEAR            SMALLINT        NOT NULL,
    COLOR           VARCHAR(32)     NOT NULL,
    PRICE           NUMERIC(7,2)    NOT NULL,
    PRIMARY KEY (CAR_TO_BUY_ID),
    UNIQUE (VIN)
);

CREATE TABLE INVOICE (
    INVOICE_ID      SERIAL                   NOT NULL,
    INVOICE_NUMBER  VARCHAR(64)              NOT NULL,
    DATE_TIME       TIMESTAMP WITH TIME ZONE NOT NULL,
    CAR_TO_BUY_ID   INT                      NOT NULL,
    CUSTOMER_ID     INT                      NOT NULL,
    SALESMAN_ID     INT                      NOT NULL,
    PRIMARY KEY (INVOICE_ID),
    UNIQUE (INVOICE_NUMBER),
    CONSTRAINT FK_INVOICE_CAR_TO_BUY
        FOREIGN KEY (CAR_TO_BUY_ID)
            REFERENCES CAR_TO_BUY (CAR_TO_BUY_ID),
    CONSTRAINT FK_INVOICE_CUSTOMER
        FOREIGN KEY (CUSTOMER_ID)
            REFERENCES CUSTOMER (CUSTOMER_ID),
    CONSTRAINT FK_INVOICE_SALESMAN
        FOREIGN KEY (SALESMAN_ID)
            REFERENCES SALESMAN (SALESMAN_ID)
);

CREATE TABLE CAR_TO_SERVICE (
    CAR_TO_SERVICE_ID   SERIAL      NOT NULL,
    VIN                 VARCHAR(20) NOT NULL,
    BRAND               VARCHAR(32) NOT NULL,
    MODEL               VARCHAR(32) NOT NULL,
    YEAR                SMALLINT    NOT NULL,
    PRIMARY KEY (CAR_TO_SERVICE_ID),
    UNIQUE (VIN)
);

CREATE TABLE CAR_SERVICE_REQUEST (
    CAR_SERVICE_REQUEST_ID      SERIAL                   NOT NULL,
    CAR_SERVICE_REQUEST_NUMBER  INT                      NOT NULL,
    RECEIVED_DATE_TIME          TIMESTAMP WITH TIME ZONE NOT NULL,
    COMPLETED_DATE_TIME         TIMESTAMP WITH TIME ZONE,
    CUSTOMER_COMMENT            TEXT,
    CUSTOMER_ID                 INT                      NOT NULL,
    CAR_TO_SERVICE_ID           INT                      NOT NULL,
    PRIMARY KEY (CAR_SERVICE_REQUEST_ID),
    UNIQUE (CAR_SERVICE_REQUEST_NUMBER),
    CONSTRAINT FK_CAR_SERVICE_REQUEST_CUSTOMER
        FOREIGN KEY (CUSTOMER_ID)
            REFERENCES CUSTOMER (CUSTOMER_ID),
    CONSTRAINT FK_CAR_SERVICE_REQUEST_CAR_TO_SERVICE
        FOREIGN KEY (CAR_TO_SERVICE_ID)
            REFERENCES CAR_TO_SERVICE (CAR_TO_SERVICE_ID)
);

CREATE TABLE PART (
    PART_ID       SERIAL       NOT NULL,
    SERIAL_NUMBER VARCHAR(32)  NOT NULL,
    DESCRIPTION   VARCHAR(64)  NOT NULL,
    PRICE         NUMERIC(7,2) NOT NULL,
    PRIMARY KEY (PART_ID),
    UNIQUE (SERIAL_NUMBER)
);

CREATE TABLE SERVICE_PART (
   SERVICE_PART_ID        SERIAL NOT NULL,
   QUANTITY               INT    NOT NULL,
   CAR_SERVICE_REQUEST_ID INT    NOT NULL,
   PART_ID                INT    NOT NULL,
   PRIMARY KEY (SERVICE_PART_ID),
   CONSTRAINT FK_SERVICE_PART_CAR_SERVICE_REQUEST
        FOREIGN KEY (CAR_SERVICE_REQUEST_ID)
            REFERENCES CAR_SERVICE_REQUEST (CAR_SERVICE_REQUEST_ID),
   CONSTRAINT FK_SERVICE_PART_PART
        FOREIGN KEY (PART_ID)
            REFERENCES PART (PART_ID)
);

CREATE TABLE SERVICE (
   SERVICE_ID       SERIAL       NOT NULL,
   SERVICE_CODE     VARCHAR(32)  NOT NULL,
   DESCRIPTION      VARCHAR(64)  NOT NULL,
   PRICE            NUMERIC(7,2) NOT NULL,
   PRIMARY KEY (SERVICE_ID),
   UNIQUE (SERVICE_CODE)
);

CREATE TABLE MECHANIC (
    MECHANIC_ID     SERIAL      NOT NULL,
    NAME            VARCHAR(32) NOT NULL,
    SURNAME         VARCHAR(32) NOT NULL,
    PESEL           VARCHAR(32) NOT NULL,
    PRIMARY KEY (MECHANIC_ID),
    UNIQUE (PESEL)
);

CREATE TABLE SERVICE_MECHANIC (
    SERVICE_MECHANIC_ID    SERIAL      NOT NULL,
    HOURS                  INT         NOT NULL,
    COMMENT                VARCHAR(64) NOT NULL,
    CAR_SERVICE_REQUEST_ID INT         NOT NULL,
    MECHANIC_ID            INT         NOT NULL,
    SERVICE_ID             INT         NOT NULL,
    PRIMARY KEY (SERVICE_MECHANIC_ID),
    CONSTRAINT FK_SERVICE_MECHANIC_CAR_SERVICE_REQUEST
            FOREIGN KEY (CAR_SERVICE_REQUEST_ID)
                REFERENCES CAR_SERVICE_REQUEST (CAR_SERVICE_REQUEST_ID),
    CONSTRAINT FK_SERVICE_MECHANIC_MECHANIC
        FOREIGN KEY (MECHANIC_ID)
            REFERENCES MECHANIC (MECHANIC_ID),
    CONSTRAINT FK_SERVICE_MECHANIC_SERVICE
        FOREIGN KEY (SERVICE_ID)
            REFERENCES SERVICE (SERVICE_ID)
);











